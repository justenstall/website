name: CI

on:
  push:
    branches:
      - main
    paths:
      # mkdocs source
      - "src/**"
      - "mkdocs.yml"
      # poetry source
      - "pyproject.toml"
      - "poetry.lock"
      # run updated workflows
      - ".github/workflows/**"
  pull_request:
    paths:
      - "src/**"
      - "mkdocs.yml"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/**"
  workflow_dispatch:
    inputs:
      do_release:
        description: "Create a release?"
        default: false
        type: boolean

concurrency: ci-${{ github.ref_name }}

env:
  # Name of the build artifact
  build_artifact: "site"

jobs:
  ############################################################
  # Lints Markdown files
  ############################################################
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: xt0rted/markdownlint-problem-matcher@v2
      - uses: DavidAnson/markdownlint-cli2-action@v14
        continue-on-error: true

  ############################################################
  # Build the site with MkDocs
  ############################################################
  build:
    uses: ./.github/workflows/build.yml
    with:
      artifact: ${{ env.build_artifact }}

  ############################################################
  # Deploys the site to GitHub Pages
  ############################################################
  deploy:
    needs: build
    uses: ./.github/workflows/deploy.yml
    with:
      artifact: ${{ env.build_artifact }}

  ############################################################
  # Triggers a release with Semantic Release
  ############################################################
  release:
    name: Release
    needs: deploy
    if: ${{ inputs.do_release }}
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Install poetry # Needed for updating version in pyproject.toml
        run: pipx install poetry==1.7.1
      - name: List semantic release plugins
        id: listPlugins
        uses: mikefarah/yq@master
        with:
          cmd: yq '[ .plugins[] | .[0] // . ] | join(" ")' .releaserc
      - name: Install Semantic Release plugins
        run: npm install -g ${{ steps.listPlugins.outputs.result }}
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  ############################################################
  # Analyze code with CodeQL
  ############################################################
  analyze:
    needs: build
    uses: ./.github/workflows/codeql.yml
    with:
      artifact: ${{ env.build_artifact }}
