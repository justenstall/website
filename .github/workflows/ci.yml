name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      do_release:
        description: "Create a release?"
        default: false
        type: boolean

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true # images are stored with LFS
      # From: https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#caching-packages
      - name: Install poetry
        run: pipx install poetry==1.7.1
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
          cache: poetry
      # Install with --no-root because project does produce a python package
      - run: poetry install --no-root
      # From: https://github.com/squidfunk/mkdocs-material/blob/master/docs/publishing-your-site.md#with-github-actions
      - name: Setup MkDocs cache
        uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ github.run_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Build site with MkDocs
        run: poetry run mkdocs build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site/
          retention-days: 7
  deploy:
    needs: build
    name: Deploy site to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write # to deploy to pages
      id-token: write # unsure
      pull-requests: write # to leave comment on PR
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/configure-pages@v4
      - name: Download the build artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: site/
      - name: Convert and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/
      - name: Deploy site to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: ${{ github.ref_name != github.event.repository.default_branch }}
      - name: Updating PR with link to preview deployment
        if: ${{ github.ref_name != github.event.repository.default_branch }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: "Deployed a preview of ${{ github.sha }} to <${{ steps.deployment.outputs.page_url }}>"
          hide_and_recreate: true
          hide_classify: "OUTDATED"
  release:
    name: Release
    needs: build
    if: ${{ inputs.do_release }}
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Install poetry # Needed for updating version in pyproject.toml
        run: pipx install poetry==1.7.1
      - name: List semantic release plugins
        id: listPlugins
        uses: mikefarah/yq@master
        with:
          cmd: yq '[ .plugins[] | .[0] // . ] | join(" ")' .releaserc
      - name: Install Semantic Release plugins
        run: npm install -g ${{ steps.listPlugins.outputs.result }}
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
